"""empty message

Revision ID: 24d4a48bf25c
Revises: 2ba835a5054b
Create Date: 2015-08-03 18:42:16.096698

"""

# revision identifiers, used by Alembic.
revision = '24d4a48bf25c'
down_revision = '2ba835a5054b'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table(u'tags')
    op.drop_table(u'item_photos')
    op.drop_table(u'items')
    op.drop_table(u'users_tags')
    op.add_column('listings', sa.Column('status', sa.SmallInteger(), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('listings', 'status')
    op.create_table(u'users_tags',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('users_tags_id_seq'::regclass)", nullable=False),
    sa.Column(u'user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'users_tags_user_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'users_tags_pkey')
    )
    op.create_table(u'items',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('items_id_seq'::regclass)", nullable=False),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column(u'updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column(u'user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'barcode', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column(u'collection_only', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column(u'discount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'location_lat', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column(u'location_lon', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column(u'retail_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'shipping_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'selling_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'color_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'condition_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'platform_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'subcategory_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'post_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'items_user_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'items_pkey')
    )
    op.create_table(u'item_photos',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('item_photos_id_seq'::regclass)", nullable=False),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column(u'item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['item_id'], [u'items.id'], name=u'item_photos_item_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'item_photos_pkey')
    )
    op.create_table(u'tags',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('tags_id_seq'::regclass)", nullable=False),
    sa.Column(u'created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column(u'updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column(u'name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column(u'parent_tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_tag_id'], [u'tags.id'], name=u'tags_parent_tag_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'tags_pkey')
    )
    ### end Alembic commands ###
